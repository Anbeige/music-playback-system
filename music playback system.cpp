// music playback system.cpp : Defines the class behavior of the application.
//

#include "stdafx.h"
#include "music playback system.h"
#include "MPS Dlg.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// CMPSApp

BEGIN_MESSAGE_MAP(CMPSApp, CWinApp)
	ON_COMMAND(ID_HELP, &CWinApp::OnHelp)
END_MESSAGE_MAP()


// CMPSApp structure

CMPSApp::CMPSApp()
{
	// Support restart manager
	m_dwRestartManagerSupportFlags = AFX_RESTART_MANAGER_SUPPORT_RESTART;

	// TODO:  Add construction code here,
// put all important initialization in InitInstance
}


// The only CMPSApp object

CMPSApp theApp;


// CMPSApp initialization

BOOL CMPSApp::InitInstance()
{
	// If an application manifest running on Windows XP specifies to
// Use ComCtl32.dll version 6 or higher to enable visualization mode,
//You need InitCommonControlsEx(). Otherwise, the window cannot be created.
	INITCOMMONCONTROLSEX InitCtrls;
	InitCtrls.dwSize = sizeof(InitCtrls);
	// Set it to include all the
// Common control class.
	InitCtrls.dwICC = ICC_WIN95_CLASSES;
	InitCommonControlsEx(&InitCtrls);

	CWinApp::InitInstance();


	AfxEnableControlContainer();

	// Create a shell manager in case the dialog contains
// Any shell tree view control or shell list view control.
	CShellManager* pShellManager = new CShellManager;

	// Activate the "Windows Native" visual manager to enable theming in MFC controls
	CMFCVisualManager::SetDefaultManager(RUNTIME_CLASS(CMFCVisualManagerWindows));

	//standard initialization
// If you are not using these features and want to reduce
// size of the final executable, the following should be removed
// specific initialization routines not needed
// change the registry key used to store the settings
// TODO: This string should be modified appropriately,
// For example, change to company or organization name
	SetRegistryKey(_T("Native applications generated by the AppWizard"));

	CMPS Dlg dlg;
	m_pMainWnd = &dlg;
	INT_PTR nResponse = dlg.DoModal();
	if (nResponse == IDOK)
	{
		// TODO:  Place here to handle when to use
// "OK" to close the dialog code
	}
	else if (nResponse == IDCANCEL)
	{
		// TODO:  Place here to handle when to use
		//  "Cancel" code to close the dialog
	}
	else if (nResponse == -1)
	{
		TRACE(traceAppMsg, 0, "Warning: Dialog creation failed, application will terminate unexpectedly。\n");
		TRACE(traceAppMsg, 0, "WARNING: If you use MFC controls on dialogs, you cannot #define _AFX_NO_MFC_CONTROLS_IN_DIALOGS。\n");
	}

	//Delete the shell manager created above 。
	if (pShellManager != NULL)
	{
		delete pShellManager;
	}

	// Since the dialog is closed, FALSE will be returned to exit the application,
// Instead of starting the app's message pump。
	return FALSE;
}